"use strict";
/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidDepositAccountsError = void 0;
exports.errorFromCode = errorFromCode;
exports.errorFromName = errorFromName;
const createErrorFromCodeLookup = new Map();
const createErrorFromNameLookup = new Map();
/**
 * InvalidDepositAccounts: 'Invalid deposit accounts error'
 *
 * @category Errors
 * @category generated
 */
class InvalidDepositAccountsError extends Error {
    code = 0x0;
    name = 'InvalidDepositAccounts';
    constructor() {
        super('Invalid deposit accounts error');
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(this, InvalidDepositAccountsError);
        }
    }
}
exports.InvalidDepositAccountsError = InvalidDepositAccountsError;
createErrorFromCodeLookup.set(0x0, () => new InvalidDepositAccountsError());
createErrorFromNameLookup.set('InvalidDepositAccounts', () => new InvalidDepositAccountsError());
/**
 * Attempts to resolve a custom program error from the provided error code.
 * @category Errors
 * @category generated
 */
function errorFromCode(code) {
    const createError = createErrorFromCodeLookup.get(code);
    return createError != null ? createError() : null;
}
/**
 * Attempts to resolve a custom program error from the provided error name, i.e. 'Unauthorized'.
 * @category Errors
 * @category generated
 */
function errorFromName(name) {
    const createError = createErrorFromNameLookup.get(name);
    return createError != null ? createError() : null;
}
