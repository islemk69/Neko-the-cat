"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolanaStakeAction = void 0;
const zod_1 = require("zod");
exports.SolanaStakeAction = {
    name: "solana_stake",
    similes: ["stake_tokens", "delegate_tokens"],
    description: `Stake your SOL (Solana), also called as SOL staking or liquid staking.

  Inputs:
  amount: number, eg 1 or 0.01 (required)`,
    examples: [
        [
            {
                input: {
                    message: {
                        id: "1",
                        content: {
                            text: JSON.stringify({
                                amount: 1
                            }),
                        },
                        userId: "user1",
                        timestamp: Date.now(),
                    },
                },
                output: {
                    success: true,
                    data: { transactionId: "5G9f8..." },
                },
            },
        ],
    ],
    handler: async (agent, input) => {
        const tx = await agent.stake(input.amount);
        return {
            success: true,
            data: {
                transaction: tx,
                amount: input.amount
            }
        };
    },
    validate: async (context, ...args) => {
        const input = args[0];
        try {
            const schema = zod_1.z.object({
                amount: zod_1.z.number().positive()
            });
            return schema.safeParse(input).success;
        }
        catch {
            return false;
        }
    },
};
//# sourceMappingURL=SolanaStakeAction.js.map