"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolanaFetchPriceAction = void 0;
const zod_1 = require("zod");
exports.SolanaFetchPriceAction = {
    name: "solana_fetch_price",
    similes: ["get_price", "fetch_token_price"],
    description: `Fetch the price of a given token in USDC.

  Inputs:
  tokenId: string, the mint address of the token (required)`,
    examples: [
        [
            {
                input: {
                    message: {
                        id: "1",
                        content: {
                            text: JSON.stringify({
                                tokenId: "So11111111111111111111111111111111111111112"
                            }),
                        },
                        userId: "user1",
                        timestamp: Date.now(),
                    },
                },
                output: {
                    success: true,
                    data: { price: 150.25 },
                },
            },
        ],
    ],
    handler: async (agent, input) => {
        const price = await agent.fetchTokenPrice(input.tokenId.trim());
        return {
            success: true,
            data: {
                tokenId: input.tokenId,
                priceInUSDC: price
            }
        };
    },
    validate: async (context, ...args) => {
        const input = args[0];
        try {
            const schema = zod_1.z.object({
                tokenId: zod_1.z.string()
            });
            return schema.safeParse(input).success;
        }
        catch {
            return false;
        }
    },
};
//# sourceMappingURL=SolanaFetchPriceAction.js.map