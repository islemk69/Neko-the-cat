"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolanaTokenDataAction = void 0;
const zod_1 = require("zod");
exports.SolanaTokenDataAction = {
    name: "solana_token_data",
    similes: ["get_token_data", "fetch_token_data"],
    description: `Get the token data for a given token mint address.

  Inputs:
  mintAddress: string, eg "So11111111111111111111111111111111111111112" (required)`,
    examples: [
        [
            {
                input: {
                    message: {
                        id: "1",
                        content: {
                            text: JSON.stringify({
                                mintAddress: "So11111111111111111111111111111111111111112"
                            }),
                        },
                        userId: "user1",
                        timestamp: Date.now(),
                    },
                },
                output: {
                    success: true,
                    data: {
                        name: "Example Token",
                        symbol: "EXT",
                        decimals: 9,
                        supply: "1000000000"
                    },
                },
            },
        ],
    ],
    handler: async (agent, input) => {
        const tokenData = await agent.getTokenDataByAddress(input.mintAddress.trim());
        return {
            success: true,
            data: {
                tokenData
            }
        };
    },
    validate: async (context, ...args) => {
        const input = args[0];
        try {
            const schema = zod_1.z.object({
                mintAddress: zod_1.z.string()
            });
            return schema.safeParse(input).success;
        }
        catch {
            return false;
        }
    },
};
//# sourceMappingURL=SolanaTokenDataAction.js.map