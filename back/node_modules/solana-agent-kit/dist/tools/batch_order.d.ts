import { PublicKey } from "@solana/web3.js";
import { SolanaAgentKit } from "../index";
export interface OrderParams {
    quantity: number;
    side: string;
    price: number;
}
interface BatchOrderPattern {
    side: string;
    totalQuantity?: number;
    priceRange?: {
        min?: number;
        max?: number;
    };
    spacing?: {
        type: "percentage" | "fixed";
        value: number;
    };
    numberOfOrders?: number;
    individualQuantity?: number;
}
/**
 * Generates an array of orders based on the specified pattern
 */
export declare function generateOrdersfromPattern(pattern: BatchOrderPattern): OrderParams[];
/**
 * Place batch orders using Manifest
 * @param agent SolanaAgentKit instance
 * @param marketId Public key for the manifest market
 * @param quantity Amount to trade in tokens
 * @param side Buy or Sell
 * @param price Price in tokens ie. SOL/USDC
 * @returns Transaction signature
 */
export declare function batchOrder(agent: SolanaAgentKit, marketId: PublicKey, orders: OrderParams[]): Promise<string>;
export {};
//# sourceMappingURL=batch_order.d.ts.map